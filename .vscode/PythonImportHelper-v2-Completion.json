[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "django.conf",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.conf",
        "description": "django.conf",
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "once_time",
        "importPath": "settings.admin",
        "description": "settings.admin",
        "isExtraImport": true,
        "detail": "settings.admin",
        "documentation": {}
    },
    {
        "label": "SomeModelAdmin",
        "importPath": "settings.admin",
        "description": "settings.admin",
        "isExtraImport": true,
        "detail": "settings.admin",
        "documentation": {}
    },
    {
        "label": "SiteInfo",
        "importPath": "settings.models",
        "description": "settings.models",
        "isExtraImport": true,
        "detail": "settings.models",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "SummernoteModelAdmin",
        "importPath": "django_summernote.admin",
        "description": "django_summernote.admin",
        "isExtraImport": true,
        "detail": "django_summernote.admin",
        "documentation": {}
    },
    {
        "label": "SummernoteModelAdmin",
        "importPath": "django_summernote.admin",
        "description": "django_summernote.admin",
        "isExtraImport": true,
        "detail": "django_summernote.admin",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "django",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django",
        "description": "django",
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "Place",
        "importPath": "property.models",
        "description": "property.models",
        "isExtraImport": true,
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "Property",
        "importPath": "property.models",
        "description": "property.models",
        "isExtraImport": true,
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "property.models",
        "description": "property.models",
        "isExtraImport": true,
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models.query_utils",
        "description": "django.db.models.query_utils",
        "isExtraImport": true,
        "detail": "django.db.models.query_utils",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models.query_utils",
        "description": "django.db.models.query_utils",
        "isExtraImport": true,
        "detail": "django.db.models.query_utils",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Post",
        "importPath": "blog.models",
        "description": "blog.models",
        "isExtraImport": true,
        "detail": "blog.models",
        "documentation": {}
    },
    {
        "label": "Post",
        "importPath": "blog.models",
        "description": "blog.models",
        "isExtraImport": true,
        "detail": "blog.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "blog.models",
        "description": "blog.models",
        "isExtraImport": true,
        "detail": "blog.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "taggit.managers",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "taggit.managers",
        "description": "taggit.managers",
        "detail": "taggit.managers",
        "documentation": {}
    },
    {
        "label": "TaggableManager",
        "importPath": "taggit.managers",
        "description": "taggit.managers",
        "isExtraImport": true,
        "detail": "taggit.managers",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "Tag",
        "importPath": "taggit.models",
        "description": "taggit.models",
        "isExtraImport": true,
        "detail": "taggit.models",
        "documentation": {}
    },
    {
        "label": "FormMixin",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "FilterView",
        "importPath": "django_filters.views",
        "description": "django_filters.views",
        "isExtraImport": true,
        "detail": "django_filters.views",
        "documentation": {}
    },
    {
        "label": "django_filters",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django_filters",
        "description": "django_filters",
        "detail": "django_filters",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "project.asgi",
        "description": "project.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "project.asgi",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "project.urls",
        "description": "project.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('property/',include('property.urls',namespace='property')),\n    path('blog/',include('blog.urls',namespace='blog')),\n    path('about/',include('about.urls',namespace='about')),\n    path('',include('settings.urls',namespace='home')),\n    path('summernote/', include('django_summernote.urls')),\n]\nurlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)\nurlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "project.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "project.wsgi",
        "description": "project.wsgi",
        "peekOfCode": "application = get_wsgi_application()\nonce_time()",
        "detail": "project.wsgi",
        "documentation": {}
    },
    {
        "label": "get_app_list",
        "kind": 2,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "def get_app_list(self, request, app_label=None):\n    app_dict = self._build_app_dict(request, app_label)\n    if not app_dict:\n        return\n    NEW_ADMIN_ORDERING = []\n    if app_label:\n        for ao in ADMIN_ORDERING:\n            if ao[0] == app_label:\n                NEW_ADMIN_ORDERING.append(ao)\n                break",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-w1(2d1k&9vb045ge^aeyt03t(33&k^(v4#cuy5h!a%%x%iix)p'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-w1(2d1k&9vb045ge^aeyt03t(33&k^(v4#cuy5h!a%%x%iix)p'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    ### My Apps",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    ### My Apps\n    'accounts',\n    'blog',",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'whitenoise.middleware.WhiteNoiseMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "ROOT_URLCONF = 'project.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "WSGI_APPLICATION = 'project.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static\",\"staticroot\") \nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static\",\"staticroot\") \nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n    # \"/var/www/static/\",",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static\",\"staticroot\") \nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n    # \"/var/www/static/\",\n]",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static\",\"staticroot\") \nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n    # \"/var/www/static/\",\n]\n# Media",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static\",\"staticroot\") \nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n    # \"/var/www/static/\",\n]\n# Media\nMEDIA_ROOT = BASE_DIR / \"media\"\n# MEDIA_ROOT = os.path.join(BASE_DIR, 'media') \nMEDIA_URL = \"media/\"",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, \"static\",\"staticroot\") \nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n    # \"/var/www/static/\",\n]\n# Media\nMEDIA_ROOT = BASE_DIR / \"media\"\n# MEDIA_ROOT = os.path.join(BASE_DIR, 'media') \nMEDIA_URL = \"media/\"\n# Default primary key field type",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n    # \"/var/www/static/\",\n]\n# Media\nMEDIA_ROOT = BASE_DIR / \"media\"\n# MEDIA_ROOT = os.path.join(BASE_DIR, 'media') \nMEDIA_URL = \"media/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / \"media\"\n# MEDIA_ROOT = os.path.join(BASE_DIR, 'media') \nMEDIA_URL = \"media/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSTORAGES = {\n    \"staticfiles\": {\n        \"BACKEND\": \"whitenoise.storage.CompressedManifestStaticFilesStorage\",\n    },",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "MEDIA_URL = \"media/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSTORAGES = {\n    \"staticfiles\": {\n        \"BACKEND\": \"whitenoise.storage.CompressedManifestStaticFilesStorage\",\n    },\n}\n# Reordering Admin Menu - \"core/settings.py\"",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSTORAGES = {\n    \"staticfiles\": {\n        \"BACKEND\": \"whitenoise.storage.CompressedManifestStaticFilesStorage\",\n    },\n}\n# Reordering Admin Menu - \"core/settings.py\"\nfrom django.contrib import admin\nADMIN_ORDERING = (\n    ('settings', (",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "STORAGES",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "STORAGES = {\n    \"staticfiles\": {\n        \"BACKEND\": \"whitenoise.storage.CompressedManifestStaticFilesStorage\",\n    },\n}\n# Reordering Admin Menu - \"core/settings.py\"\nfrom django.contrib import admin\nADMIN_ORDERING = (\n    ('settings', (\n            'SiteInfo', ",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "ADMIN_ORDERING",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "ADMIN_ORDERING = (\n    ('settings', (\n            'SiteInfo', \n            'Link', \n        )),\n    ('blog', (\n            'Post', \n            'Category',\n            'PostTag',\n        )),",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "admin.AdminSite.get_app_list",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "admin.AdminSite.get_app_list = get_app_list\n# https://github.com/lqez/django-summernote/\n# SUMMERNOTE_THEME = 'bs3'  # bs3 bs4 bs5 lite",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "about.migrations.0001_initial",
        "description": "about.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='About',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('what_we_do', models.TextField(max_length=1000)),",
        "detail": "about.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "About",
        "kind": 6,
        "importPath": "about.models",
        "description": "about.models",
        "peekOfCode": "class About(models.Model):\n   name = \"About Us\"\n   what_we_do = models.TextField(max_length=1000) \n   our_mission = models.TextField(max_length=1000) \n   our_goals = models.TextField(max_length=1000)\n   image = models.ImageField(upload_to='about/')\n   def __str__(self):\n        return str(self.name)\nclass FAQ(models.Model):\n    title = models.CharField( max_length=150)  ",
        "detail": "about.models",
        "documentation": {}
    },
    {
        "label": "FAQ",
        "kind": 6,
        "importPath": "about.models",
        "description": "about.models",
        "peekOfCode": "class FAQ(models.Model):\n    title = models.CharField( max_length=150)  \n    description = models.TextField(max_length=3000)\n    def __str__(self):\n        return self.title",
        "detail": "about.models",
        "documentation": {}
    },
    {
        "label": "AboutView",
        "kind": 6,
        "importPath": "about.views",
        "description": "about.views",
        "peekOfCode": "class AboutView(ListView):\n    model = FAQ\n    def get_context_data(self, **kwargs):\n        context =  super().get_context_data(**kwargs)\n        context[\"about\"] = About.objects.last()\n        return context",
        "detail": "about.views",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "about.urls",
        "description": "about.urls",
        "peekOfCode": "app_name = 'about'\nurlpatterns = [\n    path('',AboutView.as_view(),name='about')\n]",
        "detail": "about.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "about.urls",
        "description": "about.urls",
        "peekOfCode": "urlpatterns = [\n    path('',AboutView.as_view(),name='about')\n]",
        "detail": "about.urls",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "settings.migrations.0001_initial",
        "description": "settings.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Settings',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('site_name', models.CharField(max_length=50)),",
        "detail": "settings.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "settings.migrations.0002_settings_address",
        "description": "settings.migrations.0002_settings_address",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('settings', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='settings',\n            name='address',\n            field=models.CharField(default='cairo', max_length=100),\n        ),",
        "detail": "settings.migrations.0002_settings_address",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "settings.migrations.0003_link_rename_settings_setting",
        "description": "settings.migrations.0003_link_rename_settings_setting",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('settings', '0002_settings_address'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Link',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('text', models.CharField(max_length=50)),",
        "detail": "settings.migrations.0003_link_rename_settings_setting",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "settings.migrations.0004_rename_setting_siteinfo",
        "description": "settings.migrations.0004_rename_setting_siteinfo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('settings', '0003_link_rename_settings_setting'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='Setting',\n            new_name='SiteInfo',\n        ),\n    ]",
        "detail": "settings.migrations.0004_rename_setting_siteinfo",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "settings.migrations.0005_alter_link_options_alter_siteinfo_options",
        "description": "settings.migrations.0005_alter_link_options_alter_siteinfo_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('settings', '0004_rename_setting_siteinfo'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='link',\n            options={'verbose_name': 'Link', 'verbose_name_plural': 'Links'},\n        ),\n        migrations.AlterModelOptions(",
        "detail": "settings.migrations.0005_alter_link_options_alter_siteinfo_options",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "settings.migrations.0006_alter_link_options_alter_siteinfo_options",
        "description": "settings.migrations.0006_alter_link_options_alter_siteinfo_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('settings', '0005_alter_link_options_alter_siteinfo_options'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='link',\n            options={'verbose_name': 'Link'},\n        ),\n        migrations.AlterModelOptions(",
        "detail": "settings.migrations.0006_alter_link_options_alter_siteinfo_options",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "settings.migrations.0007_alter_siteinfo_options",
        "description": "settings.migrations.0007_alter_siteinfo_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('settings', '0006_alter_link_options_alter_siteinfo_options'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='siteinfo',\n            options={'managed': False, 'verbose_name_plural': 'SiteInfo'},\n        ),\n    ]",
        "detail": "settings.migrations.0007_alter_siteinfo_options",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "settings.migrations.0008_alter_siteinfo_options",
        "description": "settings.migrations.0008_alter_siteinfo_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('settings', '0007_alter_siteinfo_options'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='siteinfo',\n            options={'verbose_name_plural': 'SiteInfo'},\n        ),\n    ]",
        "detail": "settings.migrations.0008_alter_siteinfo_options",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "settings.migrations.0009_alter_siteinfo_options",
        "description": "settings.migrations.0009_alter_siteinfo_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('settings', '0008_alter_siteinfo_options'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='siteinfo',\n            options={'managed': False, 'verbose_name_plural': 'SiteInfo'},\n        ),\n    ]",
        "detail": "settings.migrations.0009_alter_siteinfo_options",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "settings.migrations.0010_alter_siteinfo_options",
        "description": "settings.migrations.0010_alter_siteinfo_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('settings', '0009_alter_siteinfo_options'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='siteinfo',\n            options={'verbose_name_plural': 'SiteInfo'},\n        ),\n    ]",
        "detail": "settings.migrations.0010_alter_siteinfo_options",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "settings.migrations.0011_siteinfo_slogan",
        "description": "settings.migrations.0011_siteinfo_slogan",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('settings', '0010_alter_siteinfo_options'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='siteinfo',\n            name='slogan',\n            field=models.CharField(default='', max_length=50),\n            preserve_default=False,",
        "detail": "settings.migrations.0011_siteinfo_slogan",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "settings.migrations.0012_alter_siteinfo_slogan",
        "description": "settings.migrations.0012_alter_siteinfo_slogan",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('settings', '0011_siteinfo_slogan'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='siteinfo',\n            name='slogan',\n            field=models.CharField(blank=True, max_length=50, null=True),\n        ),",
        "detail": "settings.migrations.0012_alter_siteinfo_slogan",
        "documentation": {}
    },
    {
        "label": "SomeModelAdmin",
        "kind": 6,
        "importPath": "settings.admin",
        "description": "settings.admin",
        "peekOfCode": "class SomeModelAdmin(SummernoteModelAdmin):  # instead of ModelAdmin\n    summernote_fields = '__all__'\nclass MyModelAdmin(SomeModelAdmin): #admin.ModelAdmin\n    def has_add_permission(self, request):\n        return False\nclass NoAddNoDelete(SomeModelAdmin): # admin.ModelAdmin\n    def has_add_permission(self, request):\n        return False\n    def has_delete_permission(self, request, obj=None):\n        return False",
        "detail": "settings.admin",
        "documentation": {}
    },
    {
        "label": "MyModelAdmin",
        "kind": 6,
        "importPath": "settings.admin",
        "description": "settings.admin",
        "peekOfCode": "class MyModelAdmin(SomeModelAdmin): #admin.ModelAdmin\n    def has_add_permission(self, request):\n        return False\nclass NoAddNoDelete(SomeModelAdmin): # admin.ModelAdmin\n    def has_add_permission(self, request):\n        return False\n    def has_delete_permission(self, request, obj=None):\n        return False\n# add to project/wsgi.py\ndef once_time():",
        "detail": "settings.admin",
        "documentation": {}
    },
    {
        "label": "NoAddNoDelete",
        "kind": 6,
        "importPath": "settings.admin",
        "description": "settings.admin",
        "peekOfCode": "class NoAddNoDelete(SomeModelAdmin): # admin.ModelAdmin\n    def has_add_permission(self, request):\n        return False\n    def has_delete_permission(self, request, obj=None):\n        return False\n# add to project/wsgi.py\ndef once_time():\n    if SiteInfo.objects.count() < 1:\n        SiteInfo.objects.create_site_info(\"Airbnb Website\",\"01033883434\")\nadmin.site.register(SiteInfo,NoAddNoDelete)",
        "detail": "settings.admin",
        "documentation": {}
    },
    {
        "label": "once_time",
        "kind": 2,
        "importPath": "settings.admin",
        "description": "settings.admin",
        "peekOfCode": "def once_time():\n    if SiteInfo.objects.count() < 1:\n        SiteInfo.objects.create_site_info(\"Airbnb Website\",\"01033883434\")\nadmin.site.register(SiteInfo,NoAddNoDelete)\nadmin.site.register(Link)",
        "detail": "settings.admin",
        "documentation": {}
    },
    {
        "label": "SettingsConfig",
        "kind": 6,
        "importPath": "settings.apps",
        "description": "settings.apps",
        "peekOfCode": "class SettingsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'settings'",
        "detail": "settings.apps",
        "documentation": {}
    },
    {
        "label": "SiteInfoManager",
        "kind": 6,
        "importPath": "settings.models",
        "description": "settings.models",
        "peekOfCode": "class SiteInfoManager(models.Manager):\n    def create_site_info(self, site_name,site_phone):\n        info = self.create(site_name=site_name,phone=site_phone)\n        return info\nclass SiteInfo(models.Model): \n    site_name = models.CharField(max_length=50)\n    slogan = models.CharField(max_length=50,blank=True,null=True)\n    logo = models.ImageField(upload_to='settings/', default='media/settings/logo.jpg')\n    phone = models.CharField(max_length=20)\n    email = models.EmailField(max_length=254)",
        "detail": "settings.models",
        "documentation": {}
    },
    {
        "label": "SiteInfo",
        "kind": 6,
        "importPath": "settings.models",
        "description": "settings.models",
        "peekOfCode": "class SiteInfo(models.Model): \n    site_name = models.CharField(max_length=50)\n    slogan = models.CharField(max_length=50,blank=True,null=True)\n    logo = models.ImageField(upload_to='settings/', default='media/settings/logo.jpg')\n    phone = models.CharField(max_length=20)\n    email = models.EmailField(max_length=254)\n    desciption = models.TextField(max_length=300)\n    fb_link = models.URLField( max_length=200)\n    twitter_link = models.URLField( max_length=200)\n    instagram_link = models.URLField( max_length=200)",
        "detail": "settings.models",
        "documentation": {}
    },
    {
        "label": "Link",
        "kind": 6,
        "importPath": "settings.models",
        "description": "settings.models",
        "peekOfCode": "class Link(models.Model):   \n    text = models.CharField(max_length=50)\n    link = models.CharField(max_length=50)\n    class Meta:\n        verbose_name = \"Link\"\n    def __str__(self):\n        return self.text",
        "detail": "settings.models",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "settings.views",
        "description": "settings.views",
        "peekOfCode": "def home(request):\n    places = Place.objects.all().annotate(property_count=Count('property_place'))\n    category = Category.objects.all()\n    restaurant_list = Property.objects.filter(category__name = 'Restaurant')[:5]\n    hotels_list = Property.objects.filter(category__name = 'Hotels')[:4]\n    places_list = Property.objects.filter(category__name = 'Places')[:4]\n    recent_posts = Post.objects.all()[:4]\n    user_count = User.objects.all().count()\n    place_count = Property.objects.filter(category__name = 'Places').count()\n    restaurant_count = Property.objects.filter(category__name = 'Restaurant').count()",
        "detail": "settings.views",
        "documentation": {}
    },
    {
        "label": "home_search",
        "kind": 2,
        "importPath": "settings.views",
        "description": "settings.views",
        "peekOfCode": "def home_search(request):\n    name = request.GET.get('name')\n    place = request.GET.get('place')\n    property_list = Property.objects.filter(\n         Q(name__icontains=name) &\n         Q(place__name__icontains = place)\n    )\n    return render(request,\"settings/home_search.html\",{\"property_list\":property_list})\ndef category_filter(request,category):\n    category = Category.objects.get(name=category)",
        "detail": "settings.views",
        "documentation": {}
    },
    {
        "label": "category_filter",
        "kind": 2,
        "importPath": "settings.views",
        "description": "settings.views",
        "peekOfCode": "def category_filter(request,category):\n    category = Category.objects.get(name=category)\n    property_list = Property.objects.filter(category = category)\n    return render(request,\"settings/home_search.html\",{\"property_list\":property_list})\ndef contact_us(request):\n    pass\ndef hello(request):\n    return redirect('property/')",
        "detail": "settings.views",
        "documentation": {}
    },
    {
        "label": "contact_us",
        "kind": 2,
        "importPath": "settings.views",
        "description": "settings.views",
        "peekOfCode": "def contact_us(request):\n    pass\ndef hello(request):\n    return redirect('property/')",
        "detail": "settings.views",
        "documentation": {}
    },
    {
        "label": "hello",
        "kind": 2,
        "importPath": "settings.views",
        "description": "settings.views",
        "peekOfCode": "def hello(request):\n    return redirect('property/')",
        "detail": "settings.views",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "settings.urls",
        "description": "settings.urls",
        "peekOfCode": "app_name = 'settings'\nurlpatterns =[\n    path(\"\", home, name=\"home\") ,  \n    path(\"search\", home_search, name=\"home_search\"),\n    path(\"contact_us\", contact_us, name=\"contact_us\"),\n    path(\"category/<slug:category>\", category_filter, name=\"category_filter\"),\n    path(\"hello\",hello),\n]\n# Create Onec when visit url\n#  SiteInfo.objects.create_site_info(\"Airbnb Website\",\"01033883434\")",
        "detail": "settings.urls",
        "documentation": {}
    },
    {
        "label": "myfooter",
        "kind": 2,
        "importPath": "settings.footer_context_processor",
        "description": "settings.footer_context_processor",
        "peekOfCode": "def myfooter(request):\n    myfooter = SiteInfo.objects.last()\n    return {'myfooter':myfooter}\ndef link_context(request):\n    link = Link.objects.last()\n    return {'logo': link}",
        "detail": "settings.footer_context_processor",
        "documentation": {}
    },
    {
        "label": "link_context",
        "kind": 2,
        "importPath": "settings.footer_context_processor",
        "description": "settings.footer_context_processor",
        "peekOfCode": "def link_context(request):\n    link = Link.objects.last()\n    return {'logo': link}",
        "detail": "settings.footer_context_processor",
        "documentation": {}
    },
    {
        "label": "AccountsConfig",
        "kind": 6,
        "importPath": "accounts.apps",
        "description": "accounts.apps",
        "peekOfCode": "class AccountsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'accounts'",
        "detail": "accounts.apps",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "blog.migrations.0001_initial",
        "description": "blog.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Category',\n            fields=[",
        "detail": "blog.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "blog.migrations.0002_post_slug",
        "description": "blog.migrations.0002_post_slug",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('blog', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='post',\n            name='slug',\n            field=models.SlugField(blank=True, null=True),\n        ),",
        "detail": "blog.migrations.0002_post_slug",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "blog.migrations.0003_tag",
        "description": "blog.migrations.0003_tag",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('blog', '0002_post_slug'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='tag',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=50)),",
        "detail": "blog.migrations.0003_tag",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "blog.migrations.0004_rename_tag_posttag",
        "description": "blog.migrations.0004_rename_tag_posttag",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('blog', '0003_tag'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='tag',\n            new_name='PostTag',\n        ),\n    ]",
        "detail": "blog.migrations.0004_rename_tag_posttag",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "blog.migrations.0005_delete_posttag",
        "description": "blog.migrations.0005_delete_posttag",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('blog', '0004_rename_tag_posttag'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='PostTag',\n        ),\n    ]",
        "detail": "blog.migrations.0005_delete_posttag",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "blog.management.commands.populate_db",
        "description": "blog.management.commands.populate_db",
        "peekOfCode": "class Command(BaseCommand):\n    help = \"Populates the database with random generated data.\"\n    def handle(self, *args, **options):\n        # populate the database with posts\n        posts = [\n            Post.objects.get_or_create(\n                title=\"The O2 Arena\", description=\"Peninsula Square, London SE10 0DX, United Kingdom\"\n            ),\n            Post.objects.get_or_create(\n                title=\"The Fillmore\", description=\"1805 Geary Blvd, San Francisco, United States\"",
        "detail": "blog.management.commands.populate_db",
        "documentation": {}
    },
    {
        "label": "BlogConfig",
        "kind": 6,
        "importPath": "blog.apps",
        "description": "blog.apps",
        "peekOfCode": "class BlogConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'blog'",
        "detail": "blog.apps",
        "documentation": {}
    },
    {
        "label": "Post",
        "kind": 6,
        "importPath": "blog.models",
        "description": "blog.models",
        "peekOfCode": "class Post(models.Model):\n    author = models.ForeignKey(User, related_name='post_author', on_delete=models.CASCADE)\n    title = models.CharField(max_length=100)\n    tags = TaggableManager()\n    image = models.ImageField(upload_to='post/')\n    created_at = models.DateTimeField(default=timezone.now)\n    description = models.TextField(max_length=15000)\n    category = models.ForeignKey('Category', related_name='post_category', on_delete=models.CASCADE)\n    slug = models.SlugField(null=True, blank=True)\n    def save(self, *args, **Kwargs):",
        "detail": "blog.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "blog.models",
        "description": "blog.models",
        "peekOfCode": "class Category(models.Model):\n    name = models.CharField(max_length=50)\n    def __str__(self):\n        return self.name",
        "detail": "blog.models",
        "documentation": {}
    },
    {
        "label": "PostList",
        "kind": 6,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "class PostList(ListView):\n    model = Post\n    paginate_by = 3\n    def get_queryset(self):\n        name = self.request.GET.get('q','')\n        object_list = Post.objects.filter(\n            Q(title__icontains=name) |\n            Q(description__icontains=name)  \n        )\n        return object_list",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "PostDetail",
        "kind": 6,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "class PostDetail(DetailView):\n    model = Post\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        context[\"categories\"] =  Category.objects.all().annotate(post_count=Count('post_category'))\n        context[\"tags\"] = Tag.objects.all()\n        context[\"recent_posts\"] = Post.objects.all()[:3]\n        return context\nclass PostsByCategory(ListView):\n    model = Post",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "PostsByCategory",
        "kind": 6,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "class PostsByCategory(ListView):\n    model = Post\n    def get_queryset(self):\n        slug = self.kwargs['slug']\n        object_list = Post.objects.filter(\n            Q(category__name__icontains=slug)\n        )\n        return object_list\nclass PostsByTags(ListView):\n    model = Post",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "PostsByTags",
        "kind": 6,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "class PostsByTags(ListView):\n    model = Post\n    def get_queryset(self):\n        slug = self.kwargs['slug']\n        object_list = Post.objects.filter(\n            Q(tags__name__icontains=slug)\n        )\n        return object_list",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "blog.urls",
        "description": "blog.urls",
        "peekOfCode": "app_name = 'blog'\nurlpatterns = [\n    path('', views.PostList.as_view(),name='post_list'),\n    path('<slug:slug>', views.PostDetail.as_view(),name='post_detail'),\n    path('category/<slug:slug>', views.PostsByCategory.as_view(),name='post_by_category'),\n    # path('category/<str:slug>', views.PostsByCategory.as_view(),name='post_by_category'),\n    path('tags/<slug:slug>', views.PostsByTags.as_view(),name='post_by_tags'),\n]",
        "detail": "blog.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "blog.urls",
        "description": "blog.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.PostList.as_view(),name='post_list'),\n    path('<slug:slug>', views.PostDetail.as_view(),name='post_detail'),\n    path('category/<slug:slug>', views.PostsByCategory.as_view(),name='post_by_category'),\n    # path('category/<str:slug>', views.PostsByCategory.as_view(),name='post_by_category'),\n    path('tags/<slug:slug>', views.PostsByTags.as_view(),name='post_by_tags'),\n]",
        "detail": "blog.urls",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0001_initial",
        "description": "property.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Category',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "property.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0002_property_slug",
        "description": "property.migrations.0002_property_slug",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('property', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='property',\n            name='slug',\n            field=models.SlugField(blank=True, null=True),\n        ),",
        "detail": "property.migrations.0002_property_slug",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0003_property_created_at",
        "description": "property.migrations.0003_property_created_at",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('property', '0002_property_slug'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='property',\n            name='created_at',\n            field=models.DateTimeField(default=django.utils.timezone.now),\n        ),",
        "detail": "property.migrations.0003_property_created_at",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0004_alter_propertybook_children_alter_propertybook_guest",
        "description": "property.migrations.0004_alter_propertybook_children_alter_propertybook_guest",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('property', '0003_property_created_at'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='propertybook',\n            name='children',\n            field=models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4)], max_length=2),\n        ),",
        "detail": "property.migrations.0004_alter_propertybook_children_alter_propertybook_guest",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0005_alter_propertyreview_options",
        "description": "property.migrations.0005_alter_propertyreview_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('property', '0004_alter_propertybook_children_alter_propertybook_guest'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='propertyreview',\n            options={'ordering': ['created_at']},\n        ),\n    ]",
        "detail": "property.migrations.0005_alter_propertyreview_options",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0006_alter_propertybook_guest",
        "description": "property.migrations.0006_alter_propertybook_guest",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('property', '0005_alter_propertyreview_options'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='propertybook',\n            name='guest',\n            field=models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4)]),\n        ),",
        "detail": "property.migrations.0006_alter_propertybook_guest",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0007_alter_propertybook_children",
        "description": "property.migrations.0007_alter_propertybook_children",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('property', '0006_alter_propertybook_guest'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='propertybook',\n            name='children',\n            field=models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4)]),\n        ),",
        "detail": "property.migrations.0007_alter_propertybook_children",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0008_category_icon",
        "description": "property.migrations.0008_category_icon",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('property', '0007_alter_propertybook_children'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='category',\n            name='icon',\n            field=models.CharField(default='', max_length=30),\n            preserve_default=False,",
        "detail": "property.migrations.0008_category_icon",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0009_alter_property_image",
        "description": "property.migrations.0009_alter_property_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('property', '0008_category_icon'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='property',\n            name='image',\n            field=models.ImageField(blank=True, null=True, upload_to='property/'),\n        ),",
        "detail": "property.migrations.0009_alter_property_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0010_alter_place_image_alter_property_image",
        "description": "property.migrations.0010_alter_place_image_alter_property_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('property', '0009_alter_property_image'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='place',\n            name='image',\n            field=models.ImageField(blank=True, null=True, upload_to='places/'),\n        ),",
        "detail": "property.migrations.0010_alter_place_image_alter_property_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0011_servicessection",
        "description": "property.migrations.0011_servicessection",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('property', '0010_alter_place_image_alter_property_image'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ServicesSection',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=50)),",
        "detail": "property.migrations.0011_servicessection",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0012_alter_servicessection_description",
        "description": "property.migrations.0012_alter_servicessection_description",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('property', '0011_servicessection'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='servicessection',\n            name='description',\n            field=models.CharField(max_length=100),\n        ),",
        "detail": "property.migrations.0012_alter_servicessection_description",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0013_servicessection_property",
        "description": "property.migrations.0013_servicessection_property",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('property', '0012_alter_servicessection_description'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='servicessection',\n            name='property',\n            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='property_service', to='property.property'),\n            preserve_default=False,",
        "detail": "property.migrations.0013_servicessection_property",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0014_remove_servicessection_property",
        "description": "property.migrations.0014_remove_servicessection_property",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('property', '0013_servicessection_property'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='servicessection',\n            name='property',\n        ),\n    ]",
        "detail": "property.migrations.0014_remove_servicessection_property",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0015_alter_servicessection_description",
        "description": "property.migrations.0015_alter_servicessection_description",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('property', '0014_remove_servicessection_property'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='servicessection',\n            name='description',\n            field=models.TextField(max_length=1000),\n        ),",
        "detail": "property.migrations.0015_alter_servicessection_description",
        "documentation": {}
    },
    {
        "label": "SomeModelAdmin",
        "kind": 6,
        "importPath": "property.admin",
        "description": "property.admin",
        "peekOfCode": "class SomeModelAdmin(SummernoteModelAdmin):  # instead of ModelAdmin\n    summernote_fields = '__all__'\nadmin.site.register(Property,SomeModelAdmin)\nadmin.site.register(PropertyBook)\nadmin.site.register(PropertyImages)\nadmin.site.register(PropertyReview)\nadmin.site.register(Place)\nadmin.site.register(Category)\nadmin.site.register(ServicesSection)",
        "detail": "property.admin",
        "documentation": {}
    },
    {
        "label": "PropertyConfig",
        "kind": 6,
        "importPath": "property.apps",
        "description": "property.apps",
        "peekOfCode": "class PropertyConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'property'",
        "detail": "property.apps",
        "documentation": {}
    },
    {
        "label": "Property",
        "kind": 6,
        "importPath": "property.models",
        "description": "property.models",
        "peekOfCode": "class Property(models.Model):\n    name = models.CharField(max_length=100)\n    image = models.ImageField(upload_to='property/')\n    price = models.IntegerField(default=0)\n    description = models.TextField(max_length=10000) \n    place = models.ForeignKey('Place', related_name='property_place', on_delete=models.CASCADE)\n    category = models.ForeignKey('Category', related_name='property_category', on_delete=models.CASCADE)\n    created_at = models.DateTimeField(default=timezone.now)\n    slug = models.SlugField(null=True, blank=True)\n    def save(self, *args, **Kwargs):",
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "PropertyImages",
        "kind": 6,
        "importPath": "property.models",
        "description": "property.models",
        "peekOfCode": "class PropertyImages(models.Model):    \n    property =  models.ForeignKey(Property,related_name='property_image',on_delete=models.CASCADE)\n    image = models.ImageField(upload_to='propertyimages/')\n    def __str__(self):\n        return str(self.property)\nclass Place(models.Model):\n    name = models.CharField(max_length=50)\n    image = models.ImageField(upload_to='places/',blank=True,null=True)\n    def __str__(self):\n        return str(self.name)    ",
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "Place",
        "kind": 6,
        "importPath": "property.models",
        "description": "property.models",
        "peekOfCode": "class Place(models.Model):\n    name = models.CharField(max_length=50)\n    image = models.ImageField(upload_to='places/',blank=True,null=True)\n    def __str__(self):\n        return str(self.name)    \nclass Category(models.Model):\n    name = models.CharField(max_length=50)\n    icon = models.CharField(max_length=30)\n    def __str__(self):\n        return str(self.name)",
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "property.models",
        "description": "property.models",
        "peekOfCode": "class Category(models.Model):\n    name = models.CharField(max_length=50)\n    icon = models.CharField(max_length=30)\n    def __str__(self):\n        return str(self.name)\nclass PropertyReview(models.Model):\n    author = models.ForeignKey(User,related_name='review_author',on_delete=models.CASCADE)\n    property = models.ForeignKey(Property,related_name='review_property',on_delete=models.CASCADE)\n    rate = models.IntegerField(default=0)\n    feedback = models.TextField(max_length=2000)",
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "PropertyReview",
        "kind": 6,
        "importPath": "property.models",
        "description": "property.models",
        "peekOfCode": "class PropertyReview(models.Model):\n    author = models.ForeignKey(User,related_name='review_author',on_delete=models.CASCADE)\n    property = models.ForeignKey(Property,related_name='review_property',on_delete=models.CASCADE)\n    rate = models.IntegerField(default=0)\n    feedback = models.TextField(max_length=2000)\n    created_at = models.DateTimeField(default=timezone.now)\n    def __str__(self):\n        return str(self.property)\n    class Meta:\n        ordering = ['created_at']",
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "PropertyBook",
        "kind": 6,
        "importPath": "property.models",
        "description": "property.models",
        "peekOfCode": "class PropertyBook(models.Model):\n    user = models.ForeignKey(User,related_name='book_owner',on_delete=models.CASCADE)\n    property = models.ForeignKey(Property,related_name='book_property',on_delete=models.CASCADE)\n    date_from = models.DateField(default=timezone.now)\n    date_to = models.DateField(default=timezone.now)\n    guest = models.IntegerField(choices=COUNT)\n    children = models.IntegerField(choices=COUNT)\n    def __str__(self):\n        return str(self.property)\nclass ServicesSection(models.Model):",
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "ServicesSection",
        "kind": 6,
        "importPath": "property.models",
        "description": "property.models",
        "peekOfCode": "class ServicesSection(models.Model):\n    title = models.CharField(max_length=50)\n    icon = models.CharField(max_length=30)\n    description= models.TextField(max_length=1000)\n    def __str__(self):\n        return self.title",
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "COUNT",
        "kind": 5,
        "importPath": "property.models",
        "description": "property.models",
        "peekOfCode": "COUNT = (\n    (1 , 1),\n    (2 , 2),\n    (3 , 3),\n    (4 , 4),\n)\nclass PropertyBook(models.Model):\n    user = models.ForeignKey(User,related_name='book_owner',on_delete=models.CASCADE)\n    property = models.ForeignKey(Property,related_name='book_property',on_delete=models.CASCADE)\n    date_from = models.DateField(default=timezone.now)",
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "PropertyList",
        "kind": 6,
        "importPath": "property.views",
        "description": "property.views",
        "peekOfCode": "class PropertyList(FilterView):\n    model = Property\n    paginate_by = 2\n    filterset_class = PropertyFilter\n    template_name = 'property/property_list.html'\nclass PropertyDetail(FormMixin, DetailView):\n    model = Property\n    form_class = PropertyBookForm\n    # Related Hotels\n    def get_context_data(self, **kwargs) :",
        "detail": "property.views",
        "documentation": {}
    },
    {
        "label": "PropertyDetail",
        "kind": 6,
        "importPath": "property.views",
        "description": "property.views",
        "peekOfCode": "class PropertyDetail(FormMixin, DetailView):\n    model = Property\n    form_class = PropertyBookForm\n    # Related Hotels\n    def get_context_data(self, **kwargs) :\n        context = super().get_context_data(**kwargs)\n        context[\"related\"] = Property.objects.filter(category=self.get_object().category)[:2]\n        return context\n    def post(self,request, *args, **kwargs):\n        form = self.get_form()",
        "detail": "property.views",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "property.urls",
        "description": "property.urls",
        "peekOfCode": "app_name = 'property'\nurlpatterns = [\n    path('', PropertyList.as_view(),name='property_list'),\n    path('<slug:slug>', PropertyDetail.as_view(),name='property_detail'),\n]",
        "detail": "property.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "property.urls",
        "description": "property.urls",
        "peekOfCode": "urlpatterns = [\n    path('', PropertyList.as_view(),name='property_list'),\n    path('<slug:slug>', PropertyDetail.as_view(),name='property_detail'),\n]",
        "detail": "property.urls",
        "documentation": {}
    },
    {
        "label": "PropertyBookForm",
        "kind": 6,
        "importPath": "property.forms",
        "description": "property.forms",
        "peekOfCode": "class PropertyBookForm(forms.ModelForm):\n    class Meta:\n        model = PropertyBook\n        fields = ['date_from','date_to','guest','children']",
        "detail": "property.forms",
        "documentation": {}
    },
    {
        "label": "PropertyFilter",
        "kind": 6,
        "importPath": "property.filters",
        "description": "property.filters",
        "peekOfCode": "class PropertyFilter(django_filters.FilterSet):\n    class Meta:\n        model = Property\n        fields = ['name', 'description', 'place', 'category']",
        "detail": "property.filters",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]