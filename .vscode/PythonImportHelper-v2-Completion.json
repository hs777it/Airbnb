[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "taggit.managers",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "taggit.managers",
        "description": "taggit.managers",
        "detail": "taggit.managers",
        "documentation": {}
    },
    {
        "label": "TaggableManager",
        "importPath": "taggit.managers",
        "description": "taggit.managers",
        "isExtraImport": true,
        "detail": "taggit.managers",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "SummernoteModelAdmin",
        "importPath": "django_summernote.admin",
        "description": "django_summernote.admin",
        "isExtraImport": true,
        "detail": "django_summernote.admin",
        "documentation": {}
    },
    {
        "label": "FormMixin",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "FilterView",
        "importPath": "django_filters.views",
        "description": "django_filters.views",
        "isExtraImport": true,
        "detail": "django_filters.views",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "django_filters",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django_filters",
        "description": "django_filters",
        "detail": "django_filters",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "project.asgi",
        "description": "project.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "project.asgi",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "project.urls",
        "description": "project.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('property/',include('property.urls',namespace='property')),\n    path('summernote/', include('django_summernote.urls')),\n]\nurlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)\nurlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "project.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "project.wsgi",
        "description": "project.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "project.wsgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-w1(2d1k&9vb045ge^aeyt03t(33&k^(v4#cuy5h!a%%x%iix)p'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-w1(2d1k&9vb045ge^aeyt03t(33&k^(v4#cuy5h!a%%x%iix)p'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    ### My Apps",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    ### My Apps\n    'accounts',\n    'blog',",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'project.urls'",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "ROOT_URLCONF = 'project.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "WSGI_APPLICATION = 'project.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n    \"/var/www/static/\",",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n    \"/var/www/static/\",\n]",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n    \"/var/www/static/\",\n]\nMEDIA_URL = 'media/' ",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n    \"/var/www/static/\",\n]\nMEDIA_URL = 'media/' \nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')  ",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n    \"/var/www/static/\",\n]\nMEDIA_URL = 'media/' \nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')  \n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n    \"/var/www/static/\",\n]\nMEDIA_URL = 'media/' \nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')  \n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "MEDIA_URL = 'media/' \nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')  \n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  \n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "about.migrations.0001_initial",
        "description": "about.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='About',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('what_we_do', models.TextField(max_length=1000)),",
        "detail": "about.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AboutConfig",
        "kind": 6,
        "importPath": "about.apps",
        "description": "about.apps",
        "peekOfCode": "class AboutConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'about'",
        "detail": "about.apps",
        "documentation": {}
    },
    {
        "label": "About",
        "kind": 6,
        "importPath": "about.models",
        "description": "about.models",
        "peekOfCode": "class About(models.Model):\n   what_we_do = models.TextField(max_length=1000) \n   our_mission = models.TextField(max_length=1000) \n   our_goals = models.TextField(max_length=1000)\n   image = models.ImageField(upload_to='about/')\n   def __str__(self):\n        return str(self.id)\nclass FAQ(models.Model):\n    title = models.CharField( max_length=150)  \n    description = models.TextField(max_length=3000)",
        "detail": "about.models",
        "documentation": {}
    },
    {
        "label": "FAQ",
        "kind": 6,
        "importPath": "about.models",
        "description": "about.models",
        "peekOfCode": "class FAQ(models.Model):\n    title = models.CharField( max_length=150)  \n    description = models.TextField(max_length=3000)\n    def __str__(self):\n        return self.title",
        "detail": "about.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "settings.migrations.0001_initial",
        "description": "settings.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Settings',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('site_name', models.CharField(max_length=50)),",
        "detail": "settings.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "SettingsConfig",
        "kind": 6,
        "importPath": "settings.apps",
        "description": "settings.apps",
        "peekOfCode": "class SettingsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'settings'",
        "detail": "settings.apps",
        "documentation": {}
    },
    {
        "label": "Settings",
        "kind": 6,
        "importPath": "settings.models",
        "description": "settings.models",
        "peekOfCode": "class Settings(models.Model):\n    site_name = models.CharField(max_length=50)\n    logo = models.ImageField(upload_to='settings/')\n    phone = models.CharField(max_length=20)\n    email = models.EmailField(max_length=254)\n    desciption = models.TextField(max_length=300)\n    fb_link = models.URLField( max_length=200)\n    twitter_link = models.URLField( max_length=200)\n    instagram_link = models.URLField( max_length=200)\n    def __str__(self):",
        "detail": "settings.models",
        "documentation": {}
    },
    {
        "label": "AccountsConfig",
        "kind": 6,
        "importPath": "accounts.apps",
        "description": "accounts.apps",
        "peekOfCode": "class AccountsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'accounts'",
        "detail": "accounts.apps",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "blog.migrations.0001_initial",
        "description": "blog.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Category',\n            fields=[",
        "detail": "blog.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "blog.migrations.0002_post_slug",
        "description": "blog.migrations.0002_post_slug",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('blog', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='post',\n            name='slug',\n            field=models.SlugField(blank=True, null=True),\n        ),",
        "detail": "blog.migrations.0002_post_slug",
        "documentation": {}
    },
    {
        "label": "BlogConfig",
        "kind": 6,
        "importPath": "blog.apps",
        "description": "blog.apps",
        "peekOfCode": "class BlogConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'blog'",
        "detail": "blog.apps",
        "documentation": {}
    },
    {
        "label": "Post",
        "kind": 6,
        "importPath": "blog.models",
        "description": "blog.models",
        "peekOfCode": "class Post(models.Model):\n    author = models.ForeignKey(User, related_name='post_author', on_delete=models.CASCADE)\n    title = models.CharField(max_length=100)\n    tags = TaggableManager()\n    image = models.ImageField(upload_to='post/')\n    created_at = models.DateTimeField(default=timezone.now)\n    description = models.TextField(max_length=15000)\n    category = models.ForeignKey('Category', related_name='post_category', on_delete=models.CASCADE)\n    slug = models.SlugField(null=True, blank=True)\n    def save(self, *args, **Kwargs):",
        "detail": "blog.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "blog.models",
        "description": "blog.models",
        "peekOfCode": "class Category(models.Model):\n    name = models.CharField(max_length=50)\n    def __str__(self):\n        return self.name",
        "detail": "blog.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0001_initial",
        "description": "property.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Category',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "property.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0002_property_slug",
        "description": "property.migrations.0002_property_slug",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('property', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='property',\n            name='slug',\n            field=models.SlugField(blank=True, null=True),\n        ),",
        "detail": "property.migrations.0002_property_slug",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0003_property_created_at",
        "description": "property.migrations.0003_property_created_at",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('property', '0002_property_slug'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='property',\n            name='created_at',\n            field=models.DateTimeField(default=django.utils.timezone.now),\n        ),",
        "detail": "property.migrations.0003_property_created_at",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "property.migrations.0004_alter_propertybook_children_alter_propertybook_guest",
        "description": "property.migrations.0004_alter_propertybook_children_alter_propertybook_guest",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('property', '0003_property_created_at'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='propertybook',\n            name='children',\n            field=models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4)], max_length=2),\n        ),",
        "detail": "property.migrations.0004_alter_propertybook_children_alter_propertybook_guest",
        "documentation": {}
    },
    {
        "label": "SomeModelAdmin",
        "kind": 6,
        "importPath": "property.admin",
        "description": "property.admin",
        "peekOfCode": "class SomeModelAdmin(SummernoteModelAdmin):  # instead of ModelAdmin\n    summernote_fields = '__all__'\nadmin.site.register(Property,SomeModelAdmin)\nadmin.site.register(PropertyBook)\nadmin.site.register(PropertyImages)\nadmin.site.register(PropertyReview)\nadmin.site.register(Place)\nadmin.site.register(Category)",
        "detail": "property.admin",
        "documentation": {}
    },
    {
        "label": "PropertyConfig",
        "kind": 6,
        "importPath": "property.apps",
        "description": "property.apps",
        "peekOfCode": "class PropertyConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'property'",
        "detail": "property.apps",
        "documentation": {}
    },
    {
        "label": "Property",
        "kind": 6,
        "importPath": "property.models",
        "description": "property.models",
        "peekOfCode": "class Property(models.Model):\n    name = models.CharField(max_length=100)\n    image = models.ImageField(upload_to='property/')\n    price = models.IntegerField(default=0)\n    description = models.TextField(max_length=10000) \n    place = models.ForeignKey('Place', related_name='property_place', on_delete=models.CASCADE)\n    category = models.ForeignKey('Category', related_name='property_category', on_delete=models.CASCADE)\n    created_at = models.DateTimeField(default=timezone.now)\n    slug = models.SlugField(null=True, blank=True)\n    def save(self, *args, **Kwargs):",
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "PropertyImages",
        "kind": 6,
        "importPath": "property.models",
        "description": "property.models",
        "peekOfCode": "class PropertyImages(models.Model):    \n    property =  models.ForeignKey(Property,related_name='property_image',on_delete=models.CASCADE)\n    image = models.ImageField(upload_to='propertyimages/')\n    def __str__(self):\n        return str(self.property)\nclass Place(models.Model):\n    name = models.CharField(max_length=50)\n    image = models.ImageField(upload_to='places/')\n    def __str__(self):\n        return str(self.name)    ",
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "Place",
        "kind": 6,
        "importPath": "property.models",
        "description": "property.models",
        "peekOfCode": "class Place(models.Model):\n    name = models.CharField(max_length=50)\n    image = models.ImageField(upload_to='places/')\n    def __str__(self):\n        return str(self.name)    \nclass Category(models.Model):\n    name = models.CharField(max_length=50)\n    def __str__(self):\n        return str(self.name)\nclass PropertyReview(models.Model):",
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "property.models",
        "description": "property.models",
        "peekOfCode": "class Category(models.Model):\n    name = models.CharField(max_length=50)\n    def __str__(self):\n        return str(self.name)\nclass PropertyReview(models.Model):\n    author = models.ForeignKey(User,related_name='review_author',on_delete=models.CASCADE)\n    property = models.ForeignKey(Property,related_name='review_property',on_delete=models.CASCADE)\n    rate = models.IntegerField(default=0)\n    feedback = models.TextField(max_length=2000)\n    created_at = models.DateTimeField(default=timezone.now)",
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "PropertyReview",
        "kind": 6,
        "importPath": "property.models",
        "description": "property.models",
        "peekOfCode": "class PropertyReview(models.Model):\n    author = models.ForeignKey(User,related_name='review_author',on_delete=models.CASCADE)\n    property = models.ForeignKey(Property,related_name='review_property',on_delete=models.CASCADE)\n    rate = models.IntegerField(default=0)\n    feedback = models.TextField(max_length=2000)\n    created_at = models.DateTimeField(default=timezone.now)\n    def __str__(self):\n        return str(self.property)\nCOUNT = (\n    (1 , 1),",
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "PropertyBook",
        "kind": 6,
        "importPath": "property.models",
        "description": "property.models",
        "peekOfCode": "class PropertyBook(models.Model):\n    user = models.ForeignKey(User,related_name='book_owner',on_delete=models.CASCADE)\n    property = models.ForeignKey(Property,related_name='book_property',on_delete=models.CASCADE)\n    date_from = models.DateField(default=timezone.now)\n    date_to = models.DateField(default=timezone.now)\n    guest = models.IntegerField(max_length=2,choices=COUNT)\n    children = models.IntegerField(max_length=2,choices=COUNT)\n    def __str__(self):\n        return str(self.property)",
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "COUNT",
        "kind": 5,
        "importPath": "property.models",
        "description": "property.models",
        "peekOfCode": "COUNT = (\n    (1 , 1),\n    (2 , 2),\n    (3 , 3),\n    (4 , 4),\n)\nclass PropertyBook(models.Model):\n    user = models.ForeignKey(User,related_name='book_owner',on_delete=models.CASCADE)\n    property = models.ForeignKey(Property,related_name='book_property',on_delete=models.CASCADE)\n    date_from = models.DateField(default=timezone.now)",
        "detail": "property.models",
        "documentation": {}
    },
    {
        "label": "PropertyList",
        "kind": 6,
        "importPath": "property.views",
        "description": "property.views",
        "peekOfCode": "class PropertyList(FilterView):\n    model = Property\n    paginate_by = 2\n    filterset_class = PropertyFilter\n    template_name = 'property/property_list.html'\nclass PropertyDetail(FormMixin, DetailView):\n    model = Property\n    form_class = PropertyBookForm\n    # Related Hotels\n    def get_context_data(self, **kwargs) :",
        "detail": "property.views",
        "documentation": {}
    },
    {
        "label": "PropertyDetail",
        "kind": 6,
        "importPath": "property.views",
        "description": "property.views",
        "peekOfCode": "class PropertyDetail(FormMixin, DetailView):\n    model = Property\n    form_class = PropertyBookForm\n    # Related Hotels\n    def get_context_data(self, **kwargs) :\n        context = super().get_context_data(**kwargs)\n        context[\"related\"] = Property.objects.filter(category=self.get_object().category)[:2]\n        return context\n    def post(self,request, *args, **kwargs):\n        form = self.get_form()",
        "detail": "property.views",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "property.urls",
        "description": "property.urls",
        "peekOfCode": "app_name = 'property'\nurlpatterns = [\n    path('', PropertyList.as_view(),name='property_list'),\n    path('<slug:slug>', PropertyDetail.as_view(),name='property_detail'),\n]",
        "detail": "property.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "property.urls",
        "description": "property.urls",
        "peekOfCode": "urlpatterns = [\n    path('', PropertyList.as_view(),name='property_list'),\n    path('<slug:slug>', PropertyDetail.as_view(),name='property_detail'),\n]",
        "detail": "property.urls",
        "documentation": {}
    },
    {
        "label": "PropertyBookForm",
        "kind": 6,
        "importPath": "property.forms",
        "description": "property.forms",
        "peekOfCode": "class PropertyBookForm(forms.ModelForm):\n    class Meta:\n        model = PropertyBook\n        fields = ['date_from','date_to','guest','children']",
        "detail": "property.forms",
        "documentation": {}
    },
    {
        "label": "PropertyFilter",
        "kind": 6,
        "importPath": "property.filters",
        "description": "property.filters",
        "peekOfCode": "class PropertyFilter(django_filters.FilterSet):\n    class Meta:\n        model = Property\n        fields = ['name', 'description', 'place', 'category']",
        "detail": "property.filters",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]